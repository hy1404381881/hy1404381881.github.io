<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lizy.share.mapper.RolePermissionMapper">
	<resultMap id="BaseResultMap"
		type="com.lizy.share.entity.RolePermission">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="role_id" jdbcType="INTEGER" property="roleId" />
		<result column="permission_id" jdbcType="INTEGER"
			property="permissionId" />
		<result column="create_time" jdbcType="BIGINT"
			property="createTime" />
		<result column="update_time" jdbcType="BIGINT"
			property="updateTime" />
		<result column="is_del" jdbcType="TINYINT" property="isDel" />
	</resultMap>
	<sql id="Base_Column_List">
		id, role_id, permission_id, create_time, update_time, is_del
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_role_permission
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from sys_role_permission
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="com.lizy.share.entity.RolePermission">
		insert into sys_role_permission (id, role_id, permission_id,
		create_time, update_time, is_del
		)
		values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER},
		#{permissionId,jdbcType=INTEGER},
		#{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{isDel,jdbcType=TINYINT}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.lizy.share.entity.RolePermission">
		insert into sys_role_permission
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="roleId != null">
				role_id,
			</if>
			<if test="permissionId != null">
				permission_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="isDel != null">
				is_del,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
			<if test="permissionId != null">
				#{permissionId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=BIGINT},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=BIGINT},
			</if>
			<if test="isDel != null">
				#{isDel,jdbcType=TINYINT},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.lizy.share.entity.RolePermission">
		update sys_role_permission
		<set>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=INTEGER},
			</if>
			<if test="permissionId != null">
				permission_id = #{permissionId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=BIGINT},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=BIGINT},
			</if>
			<if test="isDel != null">
				is_del = #{isDel,jdbcType=TINYINT},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.lizy.share.entity.RolePermission">
		update sys_role_permission
		set role_id = #{roleId,jdbcType=INTEGER},
		permission_id = #{permissionId,jdbcType=INTEGER},
		create_time = #{createTime,jdbcType=BIGINT},
		update_time = #{updateTime,jdbcType=BIGINT},
		is_del = #{isDel,jdbcType=TINYINT}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<!-- 根据角色信息，删除对应的权限 -->
	<update id="deleteByRole">
		update sys_role_permission set update_time=#{updateTime},is_del=0 where
		role_id=#{id};
	</update>
	<!-- 根据权限信息，删除对应的角色 -->
	<update id="deleteByPermission">
		update sys_role_permission set update_time=#{updateTime},is_del=0 where
		permission_id=#{id};
	</update>
</mapper>